function MavsApiExample()

% Make sure DLL path is loaded
CheckMavsLoaded();

% Run the MAVS Simulation
RunMavsSimulation();
end

function RunMavsSimulation()
% get the full path to mavs-matlab/mavs/data
mavs_data_path = clib.mavs_matlab_interface.mavs.matlab.GetMavsDataPath();

% specify the scene to load
scene_to_load = mavs_data_path+"\scenes\brownfield_scene.json";

% specify the vehicle to load
veh_to_load = mavs_data_path+"\vehicles\rp3d_vehicles\mrzr4_tires_low_gear.json";

% create the scene
scene = MavsScene(scene_to_load);

% create the vehicle
vehicle = MavsVehicle(veh_to_load, [20,0, 0.0], pi/2.0);

% create the lidar
lidar = MavsLidar('VLP-16');
lidar.SetOffset([0.0, 0.0, 2.0], [1.0, 0.0, 0.0, 0.0]);

% create the camera for driving the vehicle
camera = MavsCamera();
% arguments are: 
% num_horizontal_pixels, num_vertical_pixels, horiz_plane_size (m)
% vert_plane size (m), focal length (m)
camera.Initialize(480,270,0.006222, 0.0035, 0.0035);
camera.Display();
camera.SetOffset([-10.0, 0.0, 3.0], [1.0, 0.0, 0.0, 0.0]);

frame_count = 0;
sim_dt = 0.01;
while(camera.IsOpen())
    [throttle, steering, braking] = camera.GetDrivingCommand();
    vehicle.Update(scene.id, throttle, steering, braking, sim_dt);
    if (mod(frame_count,10)==0)
        [pos, ori] = vehicle.GetPose();
        camera.SetPose(pos,ori);
        camera.Update(scene.id);
        camera.Display();
        lidar.SetPose(pos,ori);
        lidar.Update(scene.id);
        lidar.Display();
    end
    frame_count = frame_count + 1;
end

end